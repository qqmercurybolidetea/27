ef func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var10 = arg9 + arg8
        var11 = arg9 ^ ((arg8 ^ var7) + arg1)
        var12 = (arg8 + -812) + arg8 & 1036307240
        var13 = -760 - 159
        var14 = ((var7 + arg8) ^ var7) ^ var10
        var15 = var10 - (arg2 & 1737901536) + var12
        var16 = arg8 & var11
        var17 = (var16 ^ arg8) | var11 & var15
        var18 = var7 & -902082433
        var19 = -81 ^ var17 + var16 | var12
        var20 = ((-1071357114 | 319) & arg2) & var15
        var21 = arg8 - (var18 + arg2) ^ var19
        var22 = arg2 + var13
        var23 = -430 | arg8
        var24 = (arg9 & var15 + var7) ^ var15
        var25 = arg8 ^ var7
        if var14 < var12:
            var26 = var7 ^ var13
        else:
            var26 = ((var24 | var7) - var15) ^ var25
        var27 = arg9 + var7 | arg1 - var20
        var28 = var13 - var7 | arg8 | var25
        var29 = var27 ^ -581394204
        var30 = (arg9 + var23 + arg1) + var11
        if arg2 < var7:
            var31 = var16 ^ var18 ^ var20 & -1839246999
        else:
            var31 = var24 ^ var23 ^ var27
        result = ((var18 | (var18 & var28) & (var10 & var7)) - (var30 & (var17 & var14 - var21 & var11 + var14))) + arg8
        return result
    var32 = func3(var7, arg1)
    var37 = func4(var32, arg1)
    var42 = func5(arg2, var32)
    var47 = func6(var7, var42)
    var48 = (444458835 + var32) & var37
    var49 = arg1 - 347
    var50 = 768839974 & arg2
    var51 = var42 - var47 - var42 & var37
    var52 = var51 & var37
    if var42 < var49:
        var53 = var32 ^ var37
    else:
        var53 = var7 - (arg1 ^ arg2)
    var54 = (var7 & var48 & var37) ^ arg2
    var55 = (var51 - var37) | var42 + var47
    if var32 < var54:
        var56 = var49 | var7
    else:
        var56 = var52 ^ ((-615 | var49) - var55)
    var57 = arg1 - (1917278604 | var51 ^ var51)
    var58 = arg2 & var7
    var59 = ((var51 ^ 1233275657) - var7) | 1844369429
    var60 = var32 & var49
    var61 = var47 - (var50 ^ var60)
    var62 = var52 + (-1396656653 ^ var32 & var59)
    result = var51 - var54 | ((var59 & (var61 | (-1788931430 ^ var48 | var60)) ^ var60 + var48 - 930) + var55 | var49)
    return result
def func6(arg43, arg44):
    var45 = 0
    for var46 in xrange(31):
        var45 += arg43 - var46 | var45
    return var45
def func5(arg38, arg39):
    var40 = 0
    for var41 in range(39):
        var40 += (-3 - var41) + arg38
    return var40
def func4(arg33, arg34):
    var35 = 0
    for var36 in range(5):
        var35 += 7 | arg34
    return var35
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(40):
        var5 += (var5 | var5) & arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,ef func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var10 = arg9 + arg8
        var11 = arg9 ^ ((arg8 ^ var7) + arg1)
        var12 = (arg8 + -812) + arg8 & 1036307240
        var13 = -760 - 159
        var14 = ((var7 + arg8) ^ var7) ^ var10
        var15 = var10 - (arg2 & 1737901536) + var12
        var16 = arg8 & var11
        var17 = (var16 ^ arg8) | var11 & var15
        var18 = var7 & -902082433
        var19 = -81 ^ var17 + var16 | var12
        var20 = ((-1071357114 | 319) & arg2) & var15
        var21 = arg8 - (var18 + arg2) ^ var19
        var22 = arg2 + var13
        var23 = -430 | arg8
        var24 = (arg9 & var15 + var7) ^ var15
        var25 = arg8 ^ var7
        if var14 < var12:
            var26 = var7 ^ var13
        else:
            var26 = ((var24 | var7) - var15) ^ var25
        var27 = arg9 + var7 | arg1 - var20
        var28 = var13 - var7 | arg8 | var25
        var29 = var27 ^ -581394204
        var30 = (arg9 + var23 + arg1) + var11
        if arg2 < var7:
            var31 = var16 ^ var18 ^ var20 & -1839246999
        else:
            var31 = var24 ^ var23 ^ var27
        result = ((var18 | (var18 & var28) & (var10 & var7)) - (var30 & (var17 & var14 - var21 & var11 + var14))) + arg8
        return result
    var32 = func3(var7, arg1)
    var37 = func4(var32, arg1)
    var42 = func5(arg2, var32)
    var47 = func6(var7, var42)
    var48 = (444458835 + var32) & var37
    var49 = arg1 - 347
    var50 = 768839974 & arg2
    var51 = var42 - var47 - var42 & var37
    var52 = var51 & var37
    if var42 < var49:
        var53 = var32 ^ var37
    else:
        var53 = var7 - (arg1 ^ arg2)
    var54 = (var7 & var48 & var37) ^ arg2
    var55 = (var51 - var37) | var42 + var47
    if var32 < var54:
        var56 = var49 | var7
    else:
        var56 = var52 ^ ((-615 | var49) - var55)
    var57 = arg1 - (1917278604 | var51 ^ var51)
    var58 = arg2 & var7
    var59 = ((var51 ^ 1233275657) - var7) | 1844369429
    var60 = var32 & var49
    var61 = var47 - (var50 ^ var60)
    var62 = var52 + (-1396656653 ^ var32 & var59)
    result = var51 - var54 | ((var59 & (var61 | (-1788931430 ^ var48 | var60)) ^ var60 + var48 - 930) + var55 | var49)
    return result
def func6(arg43, arg44):
    var45 = 0
    for var46 in xrange(31):
        var45 += arg43 - var46 | var45
    return var45
def func5(arg38, arg39):
    var40 = 0
    for var41 in range(39):
        var40 += (-3 - var41) + arg38
    return var40
def func4(arg33, arg34):
    var35 = 0
    for var36 in range(5):
        var35 += 7 | arg34
    return var35
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(40):
        var5 += (var5 | var5) & arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,ef func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var10 = arg9 + arg8
        var11 = arg9 ^ ((arg8 ^ var7) + arg1)
        var12 = (arg8 + -812) + arg8 & 1036307240
        var13 = -760 - 159
        var14 = ((var7 + arg8) ^ var7) ^ var10
        var15 = var10 - (arg2 & 1737901536) + var12
        var16 = arg8 & var11
        var17 = (var16 ^ arg8) | var11 & var15
        var18 = var7 & -902082433
        var19 = -81 ^ var17 + var16 | var12
        var20 = ((-1071357114 | 319) & arg2) & var15
        var21 = arg8 - (var18 + arg2) ^ var19
        var22 = arg2 + var13
        var23 = -430 | arg8
        var24 = (arg9 & var15 + var7) ^ var15
        var25 = arg8 ^ var7
        if var14 < var12:
            var26 = var7 ^ var13
        else:
            var26 = ((var24 | var7) - var15) ^ var25
        var27 = arg9 + var7 | arg1 - var20
        var28 = var13 - var7 | arg8 | var25
        var29 = var27 ^ -581394204
        var30 = (arg9 + var23 + arg1) + var11
        if arg2 < var7:
            var31 = var16 ^ var18 ^ var20 & -1839246999
        else:
            var31 = var24 ^ var23 ^ var27
        result = ((var18 | (var18 & var28) & (var10 & var7)) - (var30 & (var17 & var14 - var21 & var11 + var14))) + arg8
        return result
    var32 = func3(var7, arg1)
    var37 = func4(var32, arg1)
    var42 = func5(arg2, var32)
    var47 = func6(var7, var42)
    var48 = (444458835 + var32) & var37
    var49 = arg1 - 347
    var50 = 768839974 & arg2
    var51 = var42 - var47 - var42 & var37
    var52 = var51 & var37
    if var42 < var49:
        var53 = var32 ^ var37
    else:
        var53 = var7 - (arg1 ^ arg2)
    var54 = (var7 & var48 & var37) ^ arg2
    var55 = (var51 - var37) | var42 + var47
    if var32 < var54:
        var56 = var49 | var7
    else:
        var56 = var52 ^ ((-615 | var49) - var55)
    var57 = arg1 - (1917278604 | var51 ^ var51)
    var58 = arg2 & var7
    var59 = ((var51 ^ 1233275657) - var7) | 1844369429
    var60 = var32 & var49
    var61 = var47 - (var50 ^ var60)
    var62 = var52 + (-1396656653 ^ var32 & var59)
    result = var51 - var54 | ((var59 & (var61 | (-1788931430 ^ var48 | var60)) ^ var60 + var48 - 930) + var55 | var49)
    return result
def func6(arg43, arg44):
    var45 = 0
    for var46 in xrange(31):
        var45 += arg43 - var46 | var45
    return var45
def func5(arg38, arg39):
    var40 = 0
    for var41 in range(39):
        var40 += (-3 - var41) + arg38
    return var40
def func4(arg33, arg34):
    var35 = 0
    for var36 in range(5):
        var35 += 7 | arg34
    return var35
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(40):
        var5 += (var5 | var5) & arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,ef func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var10 = arg9 + arg8
        var11 = arg9 ^ ((arg8 ^ var7) + arg1)
        var12 = (arg8 + -812) + arg8 & 1036307240
        var13 = -760 - 159
        var14 = ((var7 + arg8) ^ var7) ^ var10
        var15 = var10 - (arg2 & 1737901536) + var12
        var16 = arg8 & var11
        var17 = (var16 ^ arg8) | var11 & var15
        var18 = var7 & -902082433
        var19 = -81 ^ var17 + var16 | var12
        var20 = ((-1071357114 | 319) & arg2) & var15
        var21 = arg8 - (var18 + arg2) ^ var19
        var22 = arg2 + var13
        var23 = -430 | arg8
        var24 = (arg9 & var15 + var7) ^ var15
        var25 = arg8 ^ var7
        if var14 < var12:
            var26 = var7 ^ var13
        else:
            var26 = ((var24 | var7) - var15) ^ var25
        var27 = arg9 + var7 | arg1 - var20
        var28 = var13 - var7 | arg8 | var25
        var29 = var27 ^ -581394204
        var30 = (arg9 + var23 + arg1) + var11
        if arg2 < var7:
            var31 = var16 ^ var18 ^ var20 & -1839246999
        else:
            var31 = var24 ^ var23 ^ var27
        result = ((var18 | (var18 & var28) & (var10 & var7)) - (var30 & (var17 & var14 - var21 & var11 + var14))) + arg8
        return result
    var32 = func3(var7, arg1)
    var37 = func4(var32, arg1)
    var42 = func5(arg2, var32)
    var47 = func6(var7, var42)
    var48 = (444458835 + var32) & var37
    var49 = arg1 - 347
    var50 = 768839974 & arg2
    var51 = var42 - var47 - var42 & var37
    var52 = var51 & var37
    if var42 < var49:
        var53 = var32 ^ var37
    else:
        var53 = var7 - (arg1 ^ arg2)
    var54 = (var7 & var48 & var37) ^ arg2
    var55 = (var51 - var37) | var42 + var47
    if var32 < var54:
        var56 = var49 | var7
    else:
        var56 = var52 ^ ((-615 | var49) - var55)
    var57 = arg1 - (1917278604 | var51 ^ var51)
    var58 = arg2 & var7
    var59 = ((var51 ^ 1233275657) - var7) | 1844369429
    var60 = var32 & var49
    var61 = var47 - (var50 ^ var60)
    var62 = var52 + (-1396656653 ^ var32 & var59)
    result = var51 - var54 | ((var59 & (var61 | (-1788931430 ^ var48 | var60)) ^ var60 + var48 - 930) + var55 | var49)
    return result
def func6(arg43, arg44):
    var45 = 0
    for var46 in xrange(31):
        var45 += arg43 - var46 | var45
    return var45
def func5(arg38, arg39):
    var40 = 0
    for var41 in range(39):
        var40 += (-3 - var41) + arg38
    return var40
def func4(arg33, arg34):
    var35 = 0
    for var36 in range(5):
        var35 += 7 | arg34
    return var35
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(40):
        var5 += (var5 | var5) & arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,ef func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var10 = arg9 + arg8
        var11 = arg9 ^ ((arg8 ^ var7) + arg1)
        var12 = (arg8 + -812) + arg8 & 1036307240
        var13 = -760 - 159
        var14 = ((var7 + arg8) ^ var7) ^ var10
        var15 = var10 - (arg2 & 1737901536) + var12
        var16 = arg8 & var11
        var17 = (var16 ^ arg8) | var11 & var15
        var18 = var7 & -902082433
        var19 = -81 ^ var17 + var16 | var12
        var20 = ((-1071357114 | 319) & arg2) & var15
        var21 = arg8 - (var18 + arg2) ^ var19
        var22 = arg2 + var13
        var23 = -430 | arg8
        var24 = (arg9 & var15 + var7) ^ var15
        var25 = arg8 ^ var7
        if var14 < var12:
            var26 = var7 ^ var13
        else:
            var26 = ((var24 | var7) - var15) ^ var25
        var27 = arg9 + var7 | arg1 - var20
        var28 = var13 - var7 | arg8 | var25
        var29 = var27 ^ -581394204
        var30 = (arg9 + var23 + arg1) + var11
        if arg2 < var7:
            var31 = var16 ^ var18 ^ var20 & -1839246999
        else:
            var31 = var24 ^ var23 ^ var27
        result = ((var18 | (var18 & var28) & (var10 & var7)) - (var30 & (var17 & var14 - var21 & var11 + var14))) + arg8
        return result
    var32 = func3(var7, arg1)
    var37 = func4(var32, arg1)
    var42 = func5(arg2, var32)
    var47 = func6(var7, var42)
    var48 = (444458835 + var32) & var37
    var49 = arg1 - 347
    var50 = 768839974 & arg2
    var51 = var42 - var47 - var42 & var37
    var52 = var51 & var37
    if var42 < var49:
        var53 = var32 ^ var37
    else:
        var53 = var7 - (arg1 ^ arg2)
    var54 = (var7 & var48 & var37) ^ arg2
    var55 = (var51 - var37) | var42 + var47
    if var32 < var54:
        var56 = var49 | var7
    else:
        var56 = var52 ^ ((-615 | var49) - var55)
    var57 = arg1 - (1917278604 | var51 ^ var51)
    var58 = arg2 & var7
    var59 = ((var51 ^ 1233275657) - var7) | 1844369429
    var60 = var32 & var49
    var61 = var47 - (var50 ^ var60)
    var62 = var52 + (-1396656653 ^ var32 & var59)
    result = var51 - var54 | ((var59 & (var61 | (-1788931430 ^ var48 | var60)) ^ var60 + var48 - 930) + var55 | var49)
    return result
def func6(arg43, arg44):
    var45 = 0
    for var46 in xrange(31):
        var45 += arg43 - var46 | var45
    return var45
def func5(arg38, arg39):
    var40 = 0
    for var41 in range(39):
        var40 += (-3 - var41) + arg38
    return var40
def func4(arg33, arg34):
    var35 = 0
    for var36 in range(5):
        var35 += 7 | arg34
    return var35
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(40):
        var5 += (var5 | var5) & arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,ef func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var10 = arg9 + arg8
        var11 = arg9 ^ ((arg8 ^ var7) + arg1)
        var12 = (arg8 + -812) + arg8 & 1036307240
        var13 = -760 - 159
        var14 = ((var7 + arg8) ^ var7) ^ var10
        var15 = var10 - (arg2 & 1737901536) + var12
        var16 = arg8 & var11
        var17 = (var16 ^ arg8) | var11 & var15
        var18 = var7 & -902082433
        var19 = -81 ^ var17 + var16 | var12
        var20 = ((-1071357114 | 319) & arg2) & var15
        var21 = arg8 - (var18 + arg2) ^ var19
        var22 = arg2 + var13
        var23 = -430 | arg8
        var24 = (arg9 & var15 + var7) ^ var15
        var25 = arg8 ^ var7
        if var14 < var12:
            var26 = var7 ^ var13
        else:
            var26 = ((var24 | var7) - var15) ^ var25
        var27 = arg9 + var7 | arg1 - var20
        var28 = var13 - var7 | arg8 | var25
        var29 = var27 ^ -581394204
        var30 = (arg9 + var23 + arg1) + var11
        if arg2 < var7:
            var31 = var16 ^ var18 ^ var20 & -1839246999
        else:
            var31 = var24 ^ var23 ^ var27
        result = ((var18 | (var18 & var28) & (var10 & var7)) - (var30 & (var17 & var14 - var21 & var11 + var14))) + arg8
        return result
    var32 = func3(var7, arg1)
    var37 = func4(var32, arg1)
    var42 = func5(arg2, var32)
    var47 = func6(var7, var42)
    var48 = (444458835 + var32) & var37
    var49 = arg1 - 347
    var50 = 768839974 & arg2
    var51 = var42 - var47 - var42 & var37
    var52 = var51 & var37
    if var42 < var49:
        var53 = var32 ^ var37
    else:
        var53 = var7 - (arg1 ^ arg2)
    var54 = (var7 & var48 & var37) ^ arg2
    var55 = (var51 - var37) | var42 + var47
    if var32 < var54:
        var56 = var49 | var7
    else:
        var56 = var52 ^ ((-615 | var49) - var55)
    var57 = arg1 - (1917278604 | var51 ^ var51)
    var58 = arg2 & var7
    var59 = ((var51 ^ 1233275657) - var7) | 1844369429
    var60 = var32 & var49
    var61 = var47 - (var50 ^ var60)
    var62 = var52 + (-1396656653 ^ var32 & var59)
    result = var51 - var54 | ((var59 & (var61 | (-1788931430 ^ var48 | var60)) ^ var60 + var48 - 930) + var55 | var49)
    return result
def func6(arg43, arg44):
    var45 = 0
    for var46 in xrange(31):
        var45 += arg43 - var46 | var45
    return var45
def func5(arg38, arg39):
    var40 = 0
    for var41 in range(39):
        var40 += (-3 - var41) + arg38
    return var40
def func4(arg33, arg34):
    var35 = 0
    for var36 in range(5):
        var35 += 7 | arg34
    return var35
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(40):
        var5 += (var5 | var5) & arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,ef func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var10 = arg9 + arg8
        var11 = arg9 ^ ((arg8 ^ var7) + arg1)
        var12 = (arg8 + -812) + arg8 & 1036307240
        var13 = -760 - 159
        var14 = ((var7 + arg8) ^ var7) ^ var10
        var15 = var10 - (arg2 & 1737901536) + var12
        var16 = arg8 & var11
        var17 = (var16 ^ arg8) | var11 & var15
        var18 = var7 & -902082433
        var19 = -81 ^ var17 + var16 | var12
        var20 = ((-1071357114 | 319) & arg2) & var15
        var21 = arg8 - (var18 + arg2) ^ var19
        var22 = arg2 + var13
        var23 = -430 | arg8
        var24 = (arg9 & var15 + var7) ^ var15
        var25 = arg8 ^ var7
        if var14 < var12:
            var26 = var7 ^ var13
        else:
            var26 = ((var24 | var7) - var15) ^ var25
        var27 = arg9 + var7 | arg1 - var20
        var28 = var13 - var7 | arg8 | var25
        var29 = var27 ^ -581394204
        var30 = (arg9 + var23 + arg1) + var11
        if arg2 < var7:
            var31 = var16 ^ var18 ^ var20 & -1839246999
        else:
            var31 = var24 ^ var23 ^ var27
        result = ((var18 | (var18 & var28) & (var10 & var7)) - (var30 & (var17 & var14 - var21 & var11 + var14))) + arg8
        return result
    var32 = func3(var7, arg1)
    var37 = func4(var32, arg1)
    var42 = func5(arg2, var32)
    var47 = func6(var7, var42)
    var48 = (444458835 + var32) & var37
    var49 = arg1 - 347
    var50 = 768839974 & arg2
    var51 = var42 - var47 - var42 & var37
    var52 = var51 & var37
    if var42 < var49:
        var53 = var32 ^ var37
    else:
        var53 = var7 - (arg1 ^ arg2)
    var54 = (var7 & var48 & var37) ^ arg2
    var55 = (var51 - var37) | var42 + var47
    if var32 < var54:
        var56 = var49 | var7
    else:
        var56 = var52 ^ ((-615 | var49) - var55)
    var57 = arg1 - (1917278604 | var51 ^ var51)
    var58 = arg2 & var7
    var59 = ((var51 ^ 1233275657) - var7) | 1844369429
    var60 = var32 & var49
    var61 = var47 - (var50 ^ var60)
    var62 = var52 + (-1396656653 ^ var32 & var59)
    result = var51 - var54 | ((var59 & (var61 | (-1788931430 ^ var48 | var60)) ^ var60 + var48 - 930) + var55 | var49)
    return result
def func6(arg43, arg44):
    var45 = 0
    for var46 in xrange(31):
        var45 += arg43 - var46 | var45
    return var45
def func5(arg38, arg39):
    var40 = 0
    for var41 in range(39):
        var40 += (-3 - var41) + arg38
    return var40
def func4(arg33, arg34):
    var35 = 0
    for var36 in range(5):
        var35 += 7 | arg34
    return var35
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(40):
        var5 += (var5 | var5) & arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,ef func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var10 = arg9 + arg8
        var11 = arg9 ^ ((arg8 ^ var7) + arg1)
        var12 = (arg8 + -812) + arg8 & 1036307240
        var13 = -760 - 159
        var14 = ((var7 + arg8) ^ var7) ^ var10
        var15 = var10 - (arg2 & 1737901536) + var12
        var16 = arg8 & var11
        var17 = (var16 ^ arg8) | var11 & var15
        var18 = var7 & -902082433
        var19 = -81 ^ var17 + var16 | var12
        var20 = ((-1071357114 | 319) & arg2) & var15
        var21 = arg8 - (var18 + arg2) ^ var19
        var22 = arg2 + var13
        var23 = -430 | arg8
        var24 = (arg9 & var15 + var7) ^ var15
        var25 = arg8 ^ var7
        if var14 < var12:
            var26 = var7 ^ var13
        else:
            var26 = ((var24 | var7) - var15) ^ var25
        var27 = arg9 + var7 | arg1 - var20
        var28 = var13 - var7 | arg8 | var25
        var29 = var27 ^ -581394204
        var30 = (arg9 + var23 + arg1) + var11
        if arg2 < var7:
            var31 = var16 ^ var18 ^ var20 & -1839246999
        else:
            var31 = var24 ^ var23 ^ var27
        result = ((var18 | (var18 & var28) & (var10 & var7)) - (var30 & (var17 & var14 - var21 & var11 + var14))) + arg8
        return result
    var32 = func3(var7, arg1)
    var37 = func4(var32, arg1)
    var42 = func5(arg2, var32)
    var47 = func6(var7, var42)
    var48 = (444458835 + var32) & var37
    var49 = arg1 - 347
    var50 = 768839974 & arg2
    var51 = var42 - var47 - var42 & var37
    var52 = var51 & var37
    if var42 < var49:
        var53 = var32 ^ var37
    else:
        var53 = var7 - (arg1 ^ arg2)
    var54 = (var7 & var48 & var37) ^ arg2
    var55 = (var51 - var37) | var42 + var47
    if var32 < var54:
        var56 = var49 | var7
    else:
        var56 = var52 ^ ((-615 | var49) - var55)
    var57 = arg1 - (1917278604 | var51 ^ var51)
    var58 = arg2 & var7
    var59 = ((var51 ^ 1233275657) - var7) | 1844369429
    var60 = var32 & var49
    var61 = var47 - (var50 ^ var60)
    var62 = var52 + (-1396656653 ^ var32 & var59)
    result = var51 - var54 | ((var59 & (var61 | (-1788931430 ^ var48 | var60)) ^ var60 + var48 - 930) + var55 | var49)
    return result
def func6(arg43, arg44):
    var45 = 0
    for var46 in xrange(31):
        var45 += arg43 - var46 | var45
    return var45
def func5(arg38, arg39):
    var40 = 0
    for var41 in range(39):
        var40 += (-3 - var41) + arg38
    return var40
def func4(arg33, arg34):
    var35 = 0
    for var36 in range(5):
        var35 += 7 | arg34
    return var35
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(40):
        var5 += (var5 | var5) & arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 7'
    print 'arg_number: 63'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
